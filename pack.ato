#pragma experiment("BRIDGE_CONNECT")
import ElectricPower
import ElectricSignal
import can_bridge_by_name
import Resistor
import Capacitor

from "sense.ato" import Sense

from "parts/parts.ato" import R_10, C_100nF, XT60_M, JST_B4B_XH, BQ40Z80, Schottky, NFET_A, PFET_A, LED_A, Button, Wire_2

module Pack:
	signal gnd
	signal vbat
	signal pack_p
	signal pack_n

	signal hc_gnd

	bat1 = new XT60_M
	bat2 = new XT60_M

	bat1.power.gnd ~ hc_gnd
	bat1.power.vcc ~ bat2.power.gnd
	bat2.power.vcc ~ vbat

	bal1 = new JST_B4B_XH
	bal2 = new JST_B4B_XH

	bal1.gnd ~ gnd
	#bal2.c3 ~ vbat

	mon = new BQ40Z80

	# BALANCE LEADS
	## Jumper
	bal_jumper = new Resistor
	bal_jumper.resistance = 0ohm
	bal1.c3 ~> bal_jumper ~> bal2.gnd
	## Resistors
	bal_res = new R_10[6]
	mon.VC1 ~> bal_res[0] ~> bal1.c1
	mon.VC2 ~> bal_res[1] ~> bal1.c2
	mon.VC3 ~> bal_res[2] ~> bal1.c3
	mon.VC4 ~> bal_res[3] ~> bal2.c1
	mon.VC5 ~> bal_res[4] ~> bal2.c2
	mon.VC6 ~> bal_res[5] ~> bal2.c3
	## Capacitors
	bal_caps = new C_100nF[6]
	gnd     ~> bal_caps[0] ~> mon.VC1
	mon.VC1 ~> bal_caps[1] ~> mon.VC2
	mon.VC2 ~> bal_caps[2] ~> mon.VC3
	mon.VC3 ~> bal_caps[3] ~> mon.VC4
	mon.VC4 ~> bal_caps[4] ~> mon.VC5
	mon.VC5 ~> bal_caps[5] ~> mon.VC6

	# CURRENT SENSE
	sense = new Sense
	sense.differential_capacitance = 100pF +/- 5%
	sense.sense_resistance = 1mohm +/- 1%
	sense.gnd ~ hc_gnd
	gnd ~> sense ~> pack_n
	sense.sense_p ~ mon.SRP
	sense.sense_n ~ mon.SRN
	diff_cap2 = new Capacitor
	diff_cap2.capacitance = 100nF +/- 10%
	mon.SRP ~> diff_cap2 ~> mon.SRN

	# GROUNDING
	mon.VSS ~ gnd
	mon.EP ~ gnd
	mon.FUSE ~ gnd

	# PINS 7, 14 & 27 are internally disconnected

	# BAT pin
	d_bat = new Schottky
	r_bat = new Resistor
	r_bat.resistance = 100ohm +/- 1%
	c_bat = new Capacitor[2]
	c_bat[0].capacitance = 100pF +/- 5%
	c_bat[1].capacitance = 100pF +/- 5%

	vbat ~> d_bat ~> r_bat ~> mon.BAT
	mon.BAT ~> c_bat[0] ~> gnd
	mon.BAT ~> c_bat[1] ~> gnd


	# FETS
	q_chg = new NFET_A
	q_dsg = new NFET_A


	r_qchg = new Resistor
	r_qchg.resistance = 10Mohm +/- 1%
	r_qdsg = new Resistor
	r_qdsg.resistance = 10Mohm +/- 1%
	d_qdsg = new Schottky

	vbat ~ q_chg.S
	pack_p ~ q_dsg.S

	vbat ~> r_qchg ~> q_chg.G
	pack_p ~> r_qdsg ~> q_dsg.G
	pack_p ~> d_qdsg ~> q_dsg.G

	q_chg.G ~ mon.CHG
	q_dsg.G ~ mon.DSG

	# BAT, PACK
	r_vcc = new Resistor
	r_vcc.resistance = 100ohm +/- 1%
	r_pack = new Resistor
	r_pack.resistance = 10kohm +/- 1%

	pack_p ~> r_pack ~> mon.PACK
	r_vcc ~> mon.VCC
	q_chg.D ~> r_vcc ~> mon.VCC
	q_dsg.D ~> r_vcc

	# Precharge
	q_pchg = new PFET_A
	r_precharge = new Resistor
	r_precharge.resistance = 1kohm +/- 5%
	r_precharge.max_power = 0.5W
	r_qpchg = new Resistor
	r_qpchg.resistance = 10Mohm +/- 1%

	q_chg.D ~ q_pchg.S; q_pchg.D ~> r_precharge ~> vbat

	q_pchg.S ~> r_qpchg ~> q_chg.G

	q_pchg.G ~ mon.PCHG

	# LEDs
	signal leds_a ~ mon.LEDCNTLA_PDSG_GPIO
	signal leds_b ~ mon.LEDCNTLB_GPIO
	signal leds_c ~ mon.LEDCNTLC_GPIO
	leds = new LED_A[6]
	leds_a ~> leds[0] ~> leds_b
	leds_b ~> leds[1] ~> leds_a
	leds_b ~> leds[2] ~> leds_c
	leds_c ~> leds[3] ~> leds_b
	leds_c ~> leds[4] ~> leds_a
	leds_a ~> leds[5] ~> leds_c

	led_button = new Button
	mon.nDISP_TS4_ADCIN2_GPIO ~> led_button ~> gnd

	# THERMISTORS
	TS1 = new Wire_2
	TS2 = new Wire_2
	mon.TS1 ~> TS1 ~> gnd
	mon.TS2 ~> TS2 ~> gnd

	# nPRES is used to signal that the system is present
	# nSHUTDN indicates to shutdown pack using the same signal?
	# SMBC
	# SMBD

	# PBI power backup for internal LDO
	c_pbi = new Capacitor
	c_pbi.capacitance = 2.2uF +/- 20%
	mon.PBI ~> c_pbi ~> gnd
